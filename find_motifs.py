import os
meme_files = "./hocomoco_meme"  
test_files = "./atac_results/fimo" 
meme = os.walk(meme_files)
test = os.walk(test_files)
prefix = "fimo -o ./atac_results/fimo_out/"  #Instruction prefix fimo -o and output path
input1_list = []
input2_list = []
file_name_list = []
file_name2_list = []
###########################################
for path,_,file_list in meme:    #The list of file names that make up the hocomoco dataset is easy to traverse later
    for file_name in file_list:
        input1 = os.path.join(path,file_name)
        input1_list.append(input1)
        file_name_list.append(file_name)

for path2,_,file_list2 in test:   #The list of file names that make up test dataset is easy to traverse later
    for file_name2 in file_list2:
        input2 = os.path.join(path2,file_name2)
        input2_list.append(input2)
        file_name2_list.append(file_name2)

for i in range(len(file_name_list)):    #Scan item by item
    file_name = file_name_list[i]
    input1 = input1_list[i]
    for j in range(len(file_name2_list)):
        file_name2 = file_name2_list[j]
        input2 = input2_list[j]
        cmd = prefix + file_name2[:-3] + file_name[:-5]+" " +input1 +" "+input2  #Combined execution command
        try:
            os.system(cmd)
            target = "./atac_results/fimo_out/"+file_name2[:-3] + file_name[:-5]+"/fimo.html"
            f = open(target,"rb").read()
            if b"There were 0 motif occurences with a p-value less than 0.0001." in f: #Delete scan result items less than or equal to five
                os.system("rm -rf "+target[:-10])
            elif b"There were 1 motif occurences with a p-value less" in f:
                os.system("rm -rf "+target[:-10])
            elif b"There were 2 motif occurences with a p-value less" in f:
                os.system("rm -rf "+target[:-10])  
            elif b"There were 3 motif occurences with a p-value less" in f:
                os.system("rm -rf "+target[:-10])  
            elif b"There were 4 motif occurences with a p-value less" in f:
                os.system("rm -rf "+target[:-10])
            elif b"There were 5 motif occurences with a p-value less" in f:
                os.system("rm -rf "+target[:-10])
        except:
            print("error: "+file_name+" "+file_name2)
            pass
####################################################


file_name = "./atac_results/fasta_file/"   #Integrate information from .gff files and generate .fa files
for root,dirs,files in os.walk("./atac_results/fimo_out"):
    tmp = root.split("/")
    if len(tmp) > 5:
        target =  root + "/fimo.gff"
        out = open(target,"r").readlines()[1:]
        data = ""
        for line in out:
            seq = line.split("\t")[0]
            res = line.split("\t")[-1].split(";")[-2].split("=")[-1]
            data += ">"+seq+"\n"+res+"\n"
        f = open(file_name + tmp[-1] + ".fa", "w")
        f.write(data)
        f.close()
        

#Use the tool Fimo to scan the data in the test set. The reference is the data in hocomoco, and the output result is kept in ATAC_ results/fimo_ Out / folder
#Among them, less than or equal to five similar files will not be retained and will be deleted directly
#The results generated by Fimo are processed, and the corresponding scanning sequence in the generated file is extracted
#And find the generated Fimo GFF file, put the scanning results of the corresponding test set a sequence and the a sequence in the hocomoco data set in the same file
#And get FASTA_ Location and sequence of scanning sites in file
